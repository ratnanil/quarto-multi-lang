

## Multilanguage support (en/de)

To use multi language support, I make use of [quarto profiles](https://quarto.org/docs/projects/profiles.html). 

Some ideas are from [here](https://quarto-dev.marioangst.com/en/blog/posts/multi-language-quarto/).

Current approach

1. We create two profiles: `en` / `de`
2. Each has its own YAML file: `_quarto-en.yml` and `quarto-de.yml`. In these yaml files, the `output-dir` is specified for each profile[^1]
3. We specify a default profile using [groups](https://quarto.org/docs/projects/profiles.html#profile-groups)
4. We conditionally show content using divs with the `.content-visible when-profile="en"` syntax
5. To Render, you must specify a profile (e.g. `--profile en`). In the current setup (where `en` is in the `docs` root directory and `de` is in a subdirectory), you need to append `--no-clean` if `en` is run *after* `de`
6. To publish, you cannot use `quarto publish` anymore, since this is `output-dir`-aware. We could either use netlify with the netlify-cli *or* use gh-pages and version the `output-dir`. The latter method is very simple, ableit being not-so-elegant. Netlify would have the big advantage of `redirects`, see below. 
7. If you use
   - Netlify: In the root dir, specify a `_redirects` to direct users to one of the subsites (since the root is empty)
   - gh-pages: create a redirects html pages



[^1]: Currently, we use github-pages *without* the `gh-pages` branch and *without* `quarto publish` because these functionalities don't play well with nested `output-dir`s. So a simple setup is to use `docs` as the `output-dir` of the default language (e.g. english) and `docs/de` for the secondary langauge (e.g. german).
